x-postgres: &postgres
  image: postgres:15
  restart: always
  environment:
    - POSTGRES_HOST_AUTH_METHOD=trust

services:

  traefik:
    image: "traefik:v2.11"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=postmaster@easing.ru"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"

  # Accounting
  accounting-web: &accounting
    image: popuges/accounting
    build: ./apps/accounting
    command: rails server -b 0.0.0.0
    environment:
      - DATABASE_URL=postgres://postgres@accounting-db:5432
      - SECRET_KEY_BASE
      - KAFKA_HOST=${KAFKA_HOST:-kafka:9092}
      - DOORKEEPER_APP_URL
      - DOORKEEPER_APP_ID=m60uKqBNFBqIL435DAgXInTMw02Kdsllb_hgx4eGj5M
      - DOORKEEPER_SECRET_ID=BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    depends_on:
      - accounting-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.accounting.rule=Host(`accounting.${APP_HOST}`)"
      - "traefik.http.routers.accounting.entrypoints=websecure"
      - "traefik.http.routers.accounting.service=accounting"
      - "traefik.http.routers.accounting.tls.certresolver=letsencrypt"
      - "traefik.http.services.accounting.loadbalancer.server.port=3000"

  accounting-consumer:
    <<: *accounting
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  accounting-db:
    <<: *postgres
    volumes:
      - accounting-db:/var/lib/postgresql/data

  # Analytics
  analytics-web: &analytics
    image: popuges/analytics
    build: ./apps/analytics
    command: rails server -b 0.0.0.0
    environment:
      - DATABASE_URL=postgres://postgres@analytics-db:5432
      - SECRET_KEY_BASE
      - KAFKA_HOST=${KAFKA_HOST:-kafka:9092}
      - DOORKEEPER_APP_URL
      - DOORKEEPER_APP_ID=qQ41BGrm4XICI8qK0I7Pc0tJotNPjGWQMxKucOsvqhs
      - DOORKEEPER_SECRET_ID=BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    depends_on:
      - analytics-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.analytics.rule=Host(`analytics.${APP_HOST}`)"
      - "traefik.http.routers.analytics.entrypoints=websecure"
      - "traefik.http.routers.analytics.service=analytics"
      - "traefik.http.routers.analytics.tls.certresolver=letsencrypt"
      - "traefik.http.services.analytics.loadbalancer.server.port=3000"

  analytics-consumer:
    <<: *analytics
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  analytics-db:
    <<: *postgres
    volumes:
      - analytics-db:/var/lib/postgresql/data

  # Auth
  auth-web: &auth
    image: popuges/auth
    build: ./apps/auth
    command: rails server -b 0.0.0.0
    environment:
      - DATABASE_URL=postgres://postgres@auth-db:5432
      - SECRET_KEY_BASE
      - KAFKA_HOST=${KAFKA_HOST:-kafka:9092}
      - DOORKEEPER_APP_URL
      - DOORKEEPER_APP_ID=m60uKqBNFBqIL435DAgXInTMw02Kdsllb_hgx4eGj5M
      - DOORKEEPER_SECRET_ID=BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    depends_on:
      - auth-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.${APP_HOST}`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.service=auth"
      - "traefik.http.routers.auth.tls.certresolver=letsencrypt"
      - "traefik.http.services.auth.loadbalancer.server.port=3000"

  auth-db:
    <<: *postgres
    volumes:
      - auth-db:/var/lib/postgresql/data

  # Notifications
  notifications-web: &notifications
    image: popuges/notifications
    build: ./apps/notifications
    command: rails server -b 0.0.0.0
    environment:
      - DATABASE_URL=postgres://postgres@notifications-db:5432
      - SECRET_KEY_BASE
      - KAFKA_HOST=${KAFKA_HOST:-kafka:9092}
      - DOORKEEPER_APP_URL
      - DOORKEEPER_APP_ID=erSn4By1vuRDygDvFl79zahbUsfBxhuEWUZipFRSq4M
      - DOORKEEPER_SECRET_ID=BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    depends_on:
      - notifications-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notifications.rule=Host(`notifications.${APP_HOST}`)"
      - "traefik.http.routers.notifications.entrypoints=websecure"
      - "traefik.http.routers.notifications.service=notifications"
      - "traefik.http.routers.notifications.tls.certresolver=letsencrypt"
      - "traefik.http.services.notifications.loadbalancer.server.port=3000"

  notifications-consumer:
    <<: *notifications
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  notifications-db:
    <<: *postgres
    volumes:
      - notifications-db:/var/lib/postgresql/data

  # Tasks
  tasks-web: &tasks
    image: popuges/tasks
    build: ./apps/tasks
    command: rails server -b 0.0.0.0
    environment:
      - DATABASE_URL=postgres://postgres@tasks-db:5432
      - SECRET_KEY_BASE
      - DOORKEEPER_APP_URL
      - DOORKEEPER_APP_ID=iy-sQH3SyV3LlDXpnvZrwazSKYDgrUNOG_1SIcCLN68
      - DOORKEEPER_SECRET_ID=BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    depends_on:
      - tasks-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tasks.rule=Host(`tasks.${APP_HOST}`)"
      - "traefik.http.routers.tasks.entrypoints=websecure"
      - "traefik.http.routers.tasks.service=tasks"
      - "traefik.http.routers.tasks.tls.certresolver=letsencrypt"
      - "traefik.http.services.tasks.loadbalancer.server.port=3000"

  tasks-consumer:
    <<: *tasks
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  tasks-db:
    <<: *postgres
    volumes:
      - tasks-db:/var/lib/postgresql/data

  # Kafka
  kafka-broker-1:
    container_name: kafka
    image: confluentinc/confluent-local:7.6.0
    ports:
      - 9092:9092
    environment:
      CLUSTER_ID: kafka-docker-cluster-1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
    volumes:
      - kafka:/var/lib/kafka/data

volumes:
  kafka:
  accounting-db:
  analytics-db:
  auth-db:
  tasks-db:
  notifications-db: