x-rails: &rails
  command: rails server -b 0.0.0.0
  environment: &rails-env
    DATABASE_URL: postgres://postgres@postgres:5432
    KAFKA_HOST: ${KAFKA_HOST:-kafka:9092}
    KAFKA_SSL:
    SECRET_KEY_BASE:
    DOORKEEPER_APP_URL:
    WEB_CONCURRENCY: 0
  networks:
    - traefik
  depends_on:
    - postgres
  volumes:
    - ./lib:/app/lib
    - ./schemas:/app/schemas
    - ./ssl:/app/ssl

services:
  # Accounting
  accounting-web: &accounting
    <<: *rails
    image: popuges/accounting
    build: ./apps/accounting
    ports:
      - "5001:3000"
    environment:
      <<: *rails-env
      DOORKEEPER_APP_ID: m60uKqBNFBqIL435DAgXInTMw02Kdsllb_hgx4eGj5M
      DOORKEEPER_SECRET_ID: BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.accounting.rule=Host(`accounting.${APP_HOST}`)"
      - "traefik.http.routers.accounting.entrypoints=websecure"
      - "traefik.http.routers.accounting.service=accounting"
      - "traefik.http.routers.accounting.tls=true"
      - "traefik.http.routers.accounting.tls.certresolver=letsencrypt"
      - "traefik.http.services.accounting.loadbalancer.server.port=3000"

  accounting-consumer:
    <<: *accounting
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  # Analytics
  analytics-web: &analytics
    <<: *rails
    image: popuges/analytics
    build: ./apps/analytics
    command: rails server -b 0.0.0.0
    ports:
      - "5002:3000"
    environment:
      <<: *rails-env
      DOORKEEPER_APP_ID: qQ41BGrm4XICI8qK0I7Pc0tJotNPjGWQMxKucOsvqhs
      DOORKEEPER_SECRET_ID: BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.analytics.rule=Host(`analytics.${APP_HOST}`)"
      - "traefik.http.routers.analytics.entrypoints=websecure"
      - "traefik.http.routers.analytics.service=analytics"
      - "traefik.http.routers.analytics.tls=true"
      - "traefik.http.routers.analytics.tls.certresolver=letsencrypt"
      - "traefik.http.services.analytics.loadbalancer.server.port=3000"

  analytics-consumer:
    <<: *analytics
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  # Auth
  auth-web: &auth
    <<: *rails
    image: popuges/auth
    build: ./apps/auth
    ports:
      - "5003:3000"
    environment:
      <<: *rails-env
      DOORKEEPER_APP_ID: m60uKqBNFBqIL435DAgXInTMw02Kdsllb_hgx4eGj5M
      DOORKEEPER_SECRET_ID: BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.${APP_HOST}`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.service=auth"
      - "traefik.http.routers.auth.tls=true"
      - "traefik.http.routers.auth.tls.certresolver=letsencrypt"
      - "traefik.http.services.auth.loadbalancer.server.port=3000"

  # Notifications
  notifications-web: &notifications
    <<: *rails
    image: popuges/notifications
    build: ./apps/notifications
    ports:
      - "5004:3000"
    environment:
      <<: *rails-env
      DOORKEEPER_APP_ID: erSn4By1vuRDygDvFl79zahbUsfBxhuEWUZipFRSq4M
      DOORKEEPER_SECRET_ID: BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notifications.rule=Host(`notifications.${APP_HOST}`)"
      - "traefik.http.routers.notifications.entrypoints=websecure"
      - "traefik.http.routers.notifications.service=notifications"
      - "traefik.http.routers.notifications.tls=true"
      - "traefik.http.routers.notifications.tls.certresolver=letsencrypt"
      - "traefik.http.services.notifications.loadbalancer.server.port=3000"

  notifications-consumer:
    <<: *notifications
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  # Tasks
  tasks-web: &tasks
    <<: *rails
    image: popuges/tasks
    build: ./apps/tasks
    ports:
      - "5005:3000"
    environment:
      <<: *rails-env
      DOORKEEPER_APP_ID: iy-sQH3SyV3LlDXpnvZrwazSKYDgrUNOG_1SIcCLN68
      DOORKEEPER_SECRET_ID: BSUgDZG6EhjREPFqZBP7mfJFtbzrMqD3_71RfyI43hU
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tasks.rule=Host(`tasks.${APP_HOST}`)"
      - "traefik.http.routers.tasks.entrypoints=websecure"
      - "traefik.http.routers.tasks.service=tasks"
      - "traefik.http.routers.tasks.tls=true"
      - "traefik.http.routers.tasks.tls.certresolver=letsencrypt"
      - "traefik.http.services.tasks.loadbalancer.server.port=3000"

  tasks-consumer:
    <<: *tasks
    command: bundle exec karafka server
    labels:
      - "traefik.enable=false"

  postgres:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - traefik

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    networks:
      - traefik
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.6.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - traefik
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka:/var/lib/kafka/data
networks:
  traefik:
    external: true

volumes:
  kafka:
  postgres:
